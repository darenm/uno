// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen

namespace Windows.UI.Xaml.Controls
{
	public partial class SwipeItem
	{
		GlobalDependencyProperty SwipeItemProperties.s_BackgroundProperty{ null };
GlobalDependencyProperty SwipeItemProperties.s_BehaviorOnInvokedProperty{ null };
GlobalDependencyProperty SwipeItemProperties.s_CommandProperty{ null };
GlobalDependencyProperty SwipeItemProperties.s_CommandParameterProperty{ null };
GlobalDependencyProperty SwipeItemProperties.s_ForegroundProperty{ null };
GlobalDependencyProperty SwipeItemProperties.s_IconSourceProperty{ null };
GlobalDependencyProperty SwipeItemProperties.s_TextProperty{ null };

SwipeItemProperties.SwipeItemProperties()
    : m_invokedEventSource{(SwipeItem)(this)}
{
    EnsureProperties();
}

void SwipeItemProperties.EnsureProperties()
{
    if (!s_BackgroundProperty)
    {
        s_BackgroundProperty =
            InitializeDependencyProperty(
                "Background",
                winrt.name_of<winrt.Brush>(),
                winrt.name_of<winrt.SwipeItem>(),
                false /* isAttached */,
                ValueHelper<winrt.Brush>.BoxedDefaultValue(),
                winrt.PropertyChangedCallback(&OnBackgroundPropertyChanged));
    }
    if (!s_BehaviorOnInvokedProperty)
    {
        s_BehaviorOnInvokedProperty =
            InitializeDependencyProperty(
                "BehaviorOnInvoked",
                winrt.name_of<winrt.SwipeBehaviorOnInvoked>(),
                winrt.name_of<winrt.SwipeItem>(),
                false /* isAttached */,
                ValueHelper<winrt.SwipeBehaviorOnInvoked>.BoxValueIfNecessary(winrt.SwipeBehaviorOnInvoked.Auto),
                winrt.PropertyChangedCallback(&OnBehaviorOnInvokedPropertyChanged));
    }
    if (!s_CommandProperty)
    {
        s_CommandProperty =
            InitializeDependencyProperty(
                "Command",
                winrt.name_of<winrt.ICommand>(),
                winrt.name_of<winrt.SwipeItem>(),
                false /* isAttached */,
                ValueHelper<winrt.ICommand>.BoxedDefaultValue(),
                winrt.PropertyChangedCallback(&OnCommandPropertyChanged));
    }
    if (!s_CommandParameterProperty)
    {
        s_CommandParameterProperty =
            InitializeDependencyProperty(
                "CommandParameter",
                winrt.name_of<winrt.DependencyObject>(),
                winrt.name_of<winrt.SwipeItem>(),
                false /* isAttached */,
                ValueHelper<winrt.DependencyObject>.BoxedDefaultValue(),
                winrt.PropertyChangedCallback(&OnCommandParameterPropertyChanged));
    }
    if (!s_ForegroundProperty)
    {
        s_ForegroundProperty =
            InitializeDependencyProperty(
                "Foreground",
                winrt.name_of<winrt.Brush>(),
                winrt.name_of<winrt.SwipeItem>(),
                false /* isAttached */,
                ValueHelper<winrt.Brush>.BoxedDefaultValue(),
                winrt.PropertyChangedCallback(&OnForegroundPropertyChanged));
    }
    if (!s_IconSourceProperty)
    {
        s_IconSourceProperty =
            InitializeDependencyProperty(
                "IconSource",
                winrt.name_of<winrt.IconSource>(),
                winrt.name_of<winrt.SwipeItem>(),
                false /* isAttached */,
                ValueHelper<winrt.IconSource>.BoxedDefaultValue(),
                winrt.PropertyChangedCallback(&OnIconSourcePropertyChanged));
    }
    if (!s_TextProperty)
    {
        s_TextProperty =
            InitializeDependencyProperty(
                "Text",
                winrt.name_of<winrt.hstring>(),
                winrt.name_of<winrt.SwipeItem>(),
                false /* isAttached */,
                ValueHelper<winrt.hstring>.BoxedDefaultValue(),
                winrt.PropertyChangedCallback(&OnTextPropertyChanged));
    }
}

void SwipeItemProperties.ClearProperties()
{
    s_BackgroundProperty = null;
    s_BehaviorOnInvokedProperty = null;
    s_CommandProperty = null;
    s_CommandParameterProperty = null;
    s_ForegroundProperty = null;
    s_IconSourceProperty = null;
    s_TextProperty = null;
}

void SwipeItemProperties.OnBackgroundPropertyChanged(
    winrt.DependencyObject & sender,
    winrt.DependencyPropertyChangedEventArgs & args)
{
    var owner = sender.as<winrt.SwipeItem>();
    winrt.get_self<SwipeItem>(owner).OnPropertyChanged(args);
}

void SwipeItemProperties.OnBehaviorOnInvokedPropertyChanged(
    winrt.DependencyObject & sender,
    winrt.DependencyPropertyChangedEventArgs & args)
{
    var owner = sender.as<winrt.SwipeItem>();
    winrt.get_self<SwipeItem>(owner).OnPropertyChanged(args);
}

void SwipeItemProperties.OnCommandPropertyChanged(
    winrt.DependencyObject & sender,
    winrt.DependencyPropertyChangedEventArgs & args)
{
    var owner = sender.as<winrt.SwipeItem>();
    winrt.get_self<SwipeItem>(owner).OnPropertyChanged(args);
}

void SwipeItemProperties.OnCommandParameterPropertyChanged(
    winrt.DependencyObject & sender,
    winrt.DependencyPropertyChangedEventArgs & args)
{
    var owner = sender.as<winrt.SwipeItem>();
    winrt.get_self<SwipeItem>(owner).OnPropertyChanged(args);
}

void SwipeItemProperties.OnForegroundPropertyChanged(
    winrt.DependencyObject & sender,
    winrt.DependencyPropertyChangedEventArgs & args)
{
    var owner = sender.as<winrt.SwipeItem>();
    winrt.get_self<SwipeItem>(owner).OnPropertyChanged(args);
}

void SwipeItemProperties.OnIconSourcePropertyChanged(
    winrt.DependencyObject & sender,
    winrt.DependencyPropertyChangedEventArgs & args)
{
    var owner = sender.as<winrt.SwipeItem>();
    winrt.get_self<SwipeItem>(owner).OnPropertyChanged(args);
}

void SwipeItemProperties.OnTextPropertyChanged(
    winrt.DependencyObject & sender,
    winrt.DependencyPropertyChangedEventArgs & args)
{
    var owner = sender.as<winrt.SwipeItem>();
    winrt.get_self<SwipeItem>(owner).OnPropertyChanged(args);
}

void SwipeItemProperties.Background(winrt.Brush & value)
{
    [[gsl.suppress(con)]]
    {
    (SwipeItem)(this).SetValue(s_BackgroundProperty, ValueHelper<winrt.Brush>.BoxValueIfNecessary(value));
    }
}

winrt.Brush SwipeItemProperties.Background()
{
    return ValueHelper<winrt.Brush>.CastOrUnbox((SwipeItem)(this).GetValue(s_BackgroundProperty));
}

void SwipeItemProperties.BehaviorOnInvoked(winrt.SwipeBehaviorOnInvoked & value)
{
    [[gsl.suppress(con)]]
    {
    (SwipeItem)(this).SetValue(s_BehaviorOnInvokedProperty, ValueHelper<winrt.SwipeBehaviorOnInvoked>.BoxValueIfNecessary(value));
    }
}

winrt.SwipeBehaviorOnInvoked SwipeItemProperties.BehaviorOnInvoked()
{
    return ValueHelper<winrt.SwipeBehaviorOnInvoked>.CastOrUnbox((SwipeItem)(this).GetValue(s_BehaviorOnInvokedProperty));
}

void SwipeItemProperties.Command(winrt.ICommand & value)
{
    [[gsl.suppress(con)]]
    {
    (SwipeItem)(this).SetValue(s_CommandProperty, ValueHelper<winrt.ICommand>.BoxValueIfNecessary(value));
    }
}

winrt.ICommand SwipeItemProperties.Command()
{
    return ValueHelper<winrt.ICommand>.CastOrUnbox((SwipeItem)(this).GetValue(s_CommandProperty));
}

void SwipeItemProperties.CommandParameter(winrt.DependencyObject & value)
{
    [[gsl.suppress(con)]]
    {
    (SwipeItem)(this).SetValue(s_CommandParameterProperty, ValueHelper<winrt.DependencyObject>.BoxValueIfNecessary(value));
    }
}

winrt.DependencyObject SwipeItemProperties.CommandParameter()
{
    return ValueHelper<winrt.DependencyObject>.CastOrUnbox((SwipeItem)(this).GetValue(s_CommandParameterProperty));
}

void SwipeItemProperties.Foreground(winrt.Brush & value)
{
    [[gsl.suppress(con)]]
    {
    (SwipeItem)(this).SetValue(s_ForegroundProperty, ValueHelper<winrt.Brush>.BoxValueIfNecessary(value));
    }
}

winrt.Brush SwipeItemProperties.Foreground()
{
    return ValueHelper<winrt.Brush>.CastOrUnbox((SwipeItem)(this).GetValue(s_ForegroundProperty));
}

void SwipeItemProperties.IconSource(winrt.IconSource & value)
{
    [[gsl.suppress(con)]]
    {
    (SwipeItem)(this).SetValue(s_IconSourceProperty, ValueHelper<winrt.IconSource>.BoxValueIfNecessary(value));
    }
}

winrt.IconSource SwipeItemProperties.IconSource()
{
    return ValueHelper<winrt.IconSource>.CastOrUnbox((SwipeItem)(this).GetValue(s_IconSourceProperty));
}

void SwipeItemProperties.Text(winrt.string & value)
{
    [[gsl.suppress(con)]]
    {
    (SwipeItem)(this).SetValue(s_TextProperty, ValueHelper<winrt.hstring>.BoxValueIfNecessary(value));
    }
}

winrt.string SwipeItemProperties.Text()
{
    return ValueHelper<winrt.hstring>.CastOrUnbox((SwipeItem)(this).GetValue(s_TextProperty));
}

winrt.event_token SwipeItemProperties.Invoked(winrt.TypedEventHandler<winrt.SwipeItem, winrt.SwipeItemInvokedEventArgs> & value)
{
    return m_invokedEventSource.add(value);
}

void SwipeItemProperties.Invoked(winrt.event_token & token)
{
    m_invokedEventSource.remove(token);
}
}}
