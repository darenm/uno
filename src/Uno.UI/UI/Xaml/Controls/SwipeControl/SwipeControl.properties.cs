// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen

namespace Windows.UI.Xaml.Controls
{
	public partial class SwipeControl
	{

		GlobalDependencyProperty SwipeControlProperties.s_BottomItemsProperty{ null };
GlobalDependencyProperty SwipeControlProperties.s_LeftItemsProperty{ null };
GlobalDependencyProperty SwipeControlProperties.s_RightItemsProperty{ null };
GlobalDependencyProperty SwipeControlProperties.s_TopItemsProperty{ null };

SwipeControlProperties.SwipeControlProperties()
{
    EnsureProperties();
}

void SwipeControlProperties.EnsureProperties()
{
    if (!s_BottomItemsProperty)
    {
        s_BottomItemsProperty =
            InitializeDependencyProperty(
                "BottomItems",
                winrt.name_of<winrt.SwipeItems>(),
                winrt.name_of<winrt.SwipeControl>(),
                false /* isAttached */,
                ValueHelper<winrt.SwipeItems>.BoxedDefaultValue(),
                winrt.PropertyChangedCallback(&OnBottomItemsPropertyChanged));
    }
    if (!s_LeftItemsProperty)
    {
        s_LeftItemsProperty =
            InitializeDependencyProperty(
                "LeftItems",
                winrt.name_of<winrt.SwipeItems>(),
                winrt.name_of<winrt.SwipeControl>(),
                false /* isAttached */,
                ValueHelper<winrt.SwipeItems>.BoxedDefaultValue(),
                winrt.PropertyChangedCallback(&OnLeftItemsPropertyChanged));
    }
    if (!s_RightItemsProperty)
    {
        s_RightItemsProperty =
            InitializeDependencyProperty(
                "RightItems",
                winrt.name_of<winrt.SwipeItems>(),
                winrt.name_of<winrt.SwipeControl>(),
                false /* isAttached */,
                ValueHelper<winrt.SwipeItems>.BoxedDefaultValue(),
                winrt.PropertyChangedCallback(&OnRightItemsPropertyChanged));
    }
    if (!s_TopItemsProperty)
    {
        s_TopItemsProperty =
            InitializeDependencyProperty(
                "TopItems",
                winrt.name_of<winrt.SwipeItems>(),
                winrt.name_of<winrt.SwipeControl>(),
                false /* isAttached */,
                ValueHelper<winrt.SwipeItems>.BoxedDefaultValue(),
                winrt.PropertyChangedCallback(&OnTopItemsPropertyChanged));
    }
}

void SwipeControlProperties.ClearProperties()
{
    s_BottomItemsProperty = null;
    s_LeftItemsProperty = null;
    s_RightItemsProperty = null;
    s_TopItemsProperty = null;
}

void SwipeControlProperties.OnBottomItemsPropertyChanged(
    winrt.DependencyObject & sender,
    winrt.DependencyPropertyChangedEventArgs & args)
{
    var owner = sender.as<winrt.SwipeControl>();
    winrt.get_self<SwipeControl>(owner).OnPropertyChanged(args);
}

void SwipeControlProperties.OnLeftItemsPropertyChanged(
    winrt.DependencyObject & sender,
    winrt.DependencyPropertyChangedEventArgs & args)
{
    var owner = sender.as<winrt.SwipeControl>();
    winrt.get_self<SwipeControl>(owner).OnPropertyChanged(args);
}

void SwipeControlProperties.OnRightItemsPropertyChanged(
    winrt.DependencyObject & sender,
    winrt.DependencyPropertyChangedEventArgs & args)
{
    var owner = sender.as<winrt.SwipeControl>();
    winrt.get_self<SwipeControl>(owner).OnPropertyChanged(args);
}

void SwipeControlProperties.OnTopItemsPropertyChanged(
    winrt.DependencyObject & sender,
    winrt.DependencyPropertyChangedEventArgs & args)
{
    var owner = sender.as<winrt.SwipeControl>();
    winrt.get_self<SwipeControl>(owner).OnPropertyChanged(args);
}

void SwipeControlProperties.BottomItems(winrt.SwipeItems & value)
{
    [[gsl.suppress(con)]]
    {
    (SwipeControl)(this).SetValue(s_BottomItemsProperty, ValueHelper<winrt.SwipeItems>.BoxValueIfNecessary(value));
    }
}

winrt.SwipeItems SwipeControlProperties.BottomItems()
{
    return ValueHelper<winrt.SwipeItems>.CastOrUnbox((SwipeControl)(this).GetValue(s_BottomItemsProperty));
}

void SwipeControlProperties.LeftItems(winrt.SwipeItems & value)
{
    [[gsl.suppress(con)]]
    {
    (SwipeControl)(this).SetValue(s_LeftItemsProperty, ValueHelper<winrt.SwipeItems>.BoxValueIfNecessary(value));
    }
}

winrt.SwipeItems SwipeControlProperties.LeftItems()
{
    return ValueHelper<winrt.SwipeItems>.CastOrUnbox((SwipeControl)(this).GetValue(s_LeftItemsProperty));
}

void SwipeControlProperties.RightItems(winrt.SwipeItems & value)
{
    [[gsl.suppress(con)]]
    {
    (SwipeControl)(this).SetValue(s_RightItemsProperty, ValueHelper<winrt.SwipeItems>.BoxValueIfNecessary(value));
    }
}

winrt.SwipeItems SwipeControlProperties.RightItems()
{
    return ValueHelper<winrt.SwipeItems>.CastOrUnbox((SwipeControl)(this).GetValue(s_RightItemsProperty));
}

void SwipeControlProperties.TopItems(winrt.SwipeItems & value)
{
    [[gsl.suppress(con)]]
    {
    (SwipeControl)(this).SetValue(s_TopItemsProperty, ValueHelper<winrt.SwipeItems>.BoxValueIfNecessary(value));
    }
}

winrt.SwipeItems SwipeControlProperties.TopItems()
{
    return ValueHelper<winrt.SwipeItems>.CastOrUnbox((SwipeControl)(this).GetValue(s_TopItemsProperty));
}
}}
